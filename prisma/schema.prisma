generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URI")
}

model Friend {
  id          Int    @id @default(autoincrement())
  name        String @default("") @db.VarChar(255)
  link        String @default("") @db.VarChar(255)
  avatar      String @default("") @db.VarChar(255)
  description String @default("") @db.VarChar(255)
  category    String @default("") @db.VarChar(255)
  is_hidden   Int    @default(0) @db.TinyInt
  sorting     Int    @default(0) @db.UnsignedInt
}

model User {
  id        Int     @id @default(autoincrement())
  name      String  @default("") @db.VarChar(255)
  email     String  @unique @default("") @db.VarChar(255)
  email_md5 String  @default("") @db.Char(32)
  site_url  String  @default("") @db.VarChar(255)
  tag       String  @default("") @db.VarChar(255)
  banned    Boolean @default(false) @db.TinyInt
  favor     Favor[]
}

model Admin {
  id         Int    @id @default(autoincrement())
  name       String @default("") @db.VarChar(255)
  email      String @unique @default("") @db.VarChar(255)
  email_md5  String @default("") @db.Char(32)
  password   String @default("") @db.Char(64)
  salt       String @default("") @db.Char(8)
  avatar_url String @default("") @db.VarChar(255)
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String   @default("") @db.VarChar(255)
  description String   @default("") @db.VarChar(255)
  cover_url   String   @default("") @db.VarChar(255)
  md_file_url String   @default("") @db.VarChar(255)
  tag         String   @default("") @db.VarChar(255)
  create_at   DateTime @default(now())
  update_at   DateTime @updatedAt
  published   Boolean  @default(true) @db.TinyInt
  favor       Favor[]
}

model Moment {
  id        Int      @id @default(autoincrement())
  content   String   @default("") @db.VarChar(255)
  image_url String   @default("") @db.VarChar(255)
  tag       String   @default("") @db.VarChar(255)
  create_at DateTime @default(now())
  update_at DateTime @updatedAt
  published Boolean  @default(true) @db.TinyInt
  favor     Favor[]
}

model Comment {
  id             Int      @id @default(autoincrement())
  post_id        Int?     @default(0) @db.UnsignedInt
  moment_id      Int?     @default(0) @db.UnsignedInt
  user_name      String   @default("") @db.VarChar(255)
  user_email_md5 String   @default("") @db.Char(32)
  user_site_url  String   @default("") @db.VarChar(255)
  user_tag       String   @default("") @db.VarChar(255)
  content        String   @default("") @db.VarChar(255)
  create_at      DateTime @default(now())
  update_at      DateTime @updatedAt
  published      Boolean  @default(true) @db.TinyInt
  favor          Favor[]
  reply          Reply[]
}

model Reply {
  id             Int      @id @default(autoincrement())
  comment        Comment  @relation(fields: [comment_id], references: [id])
  comment_id     Int
  reply_id       Int      @default(0) @db.UnsignedInt
  reply_name     String   @default("") @db.VarChar(255)
  user_name      String   @default("") @db.VarChar(255)
  user_email_md5 String   @default("") @db.Char(32)
  user_site_url  String   @default("") @db.VarChar(255)
  user_tag       String   @default("") @db.VarChar(255)
  content        String   @default("") @db.VarChar(255)
  create_at      DateTime @default(now())
  update_at      DateTime @updatedAt
  published      Boolean  @default(true) @db.TinyInt
  favor          Favor[]
}

model Favor {
  id         Int      @id @default(autoincrement())
  user       User?    @relation(fields: [user_id], references: [id])
  user_id    Int?
  post       Post?    @relation(fields: [post_id], references: [id])
  post_id    Int?
  moment     Moment?  @relation(fields: [moment_id], references: [id])
  moment_id  Int?
  comment    Comment? @relation(fields: [comment_id], references: [id])
  comment_id Int?
  reply      Reply?   @relation(fields: [reply_id], references: [id])
  reply_id   Int?
}
